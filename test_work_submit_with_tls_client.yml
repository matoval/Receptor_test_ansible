---
- name: Run TestWorkSubmitWithTLSClient
  hosts: all
  tasks:
    - name: Check packages
      package_facts:
        manager: auto
    - name: Run TestWorkSubmitWithTLSClient block
      block:
        - name: Yum install git
          become: true
          ansible.builtin.yum:
            name: git
            state: present
        - name: Install Go
          become: true
          when: "'go' not in ansible_facts.packages"
          block:
            - name: Yum install golang
              ansible.builtin.yum:
                name: golang
                state: present
            - name: Set GOPATH
              block:
                - name: Add Go dir
                  ansible.builtin.file:
                    path: /home/{{ ansible_user }}/go
                    state: directory
                    mode: "0755"
                    owner: "{{ ansible_user }}"
                    group: "{{ ansible_user }}"
                - name: Add path to bashrc
                  ansible.builtin.blockinfile:
                    path: /home/{{ ansible_user }}/.bashrc
                    insertafter: true
                    block: |
                      export GOPATH=$HOME/go
                - name: Source bashrc
                  ansible.builtin.shell: source /home/{{ ansible_user }}/.bashrc
        - name: Install Receptor
          block:
            - name: Clone Receptor repo
              ansible.builtin.git:
                repo: https://github.com/ansible/receptor.git
                dest: /home/{{ ansible_user }}/receptor
                version: devel
            - name: Create Receptor bin
              become: true
              community.general.make:
                chdir: /home/{{ ansible_user }}/receptor
                target: build-all
            - name: Symlink Receptor bin
              become: true
              ansible.builtin.file:
                src: /home/{{ ansible_user }}/receptor/receptor
                dest: /usr/local/bin/receptor
                state: link
        - name: Install Kind
          become: true
          ansible.builtin.get_url:
            url: https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
            dest: /usr/local/bin/kind
            mode: "0755"
        - name: Create user@.service.d dir
          become: true
          ansible.builtin.file:
            path: /etc/systemd/system/user@.service.d
            state: directory
        - name: Add delegate.conf
          become: true
          ansible.builtin.copy:
            dest: /etc/systemd/system/user@.service.d/delegate.conf
            content: |
              [Service]
              Delegate=yes
        - name: Install and enable Docker non-RHel
          become: true
          when: ansible_distribution != "RedHat"
          block:
            - name: Make sure dnf-plugins.core installed
              ansible.builtin.yum:
                name: dnf-plugins-core
                state: present
            - name: Install docker repository
              ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
            - name: Make sure docker from distro is not installed
              ansible.builtin.yum:
                name: "{{ item }}"
                state: absent
              with_items:
                - docker
                - docker-common
                - container-selinux
                - docker-selinux
                - docker-engine
            - name: Install docker
              ansible.builtin.yum:
                name: "{{ item }}"
                state: present
              with_items:
                - docker-ce
                - docker-ce-cli
                - containerd.io
                - docker-buildx-plugin
                - docker-compose-plugin
            - name: Ensure docker deamon is running
              ansible.builtin.service:
                name: docker
                state: started
            - name: Add user to Docker group
              ansible.builtin.user:
                name: "{{ ansible_user }}"
                group: docker
        - name: Install and enable Docker on RHEL
          when: ansible_distribution == "RedHat"
          become: true
          block:
            - name: Install dependencies
              ansible.builtin.yum:
                name: "{{ item }}"
                state: present
              with_items:
                - yum-utils
                - device-mapper-persistent-data
                - lvm2
            - name: Install docker repository
              ansible.builtin.command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            - name: Install docker
              ansible.builtin.yum:
                name: "{{ item }}"
                state: present
              with_items:
                - docker-ce
                - docker-ce-cli
                - containerd.io
                - docker-buildx-plugin
                - docker-compose-plugin
            - name: Ensure docker deamon is running
              ansible.builtin.service:
                name: docker
                state: started
            - name: Add user to Docker group
              ansible.builtin.user:
                name: "{{ ansible_user }}"
                group: docker
        - name: Create iptables.conf
          become: true
          ansible.builtin.copy:
            dest: /etc/modules-load.d/iptables.conf
            content: |
              ip6_tables
              ip6table_nat
              ip_tables
              iptable_nat
        - name: Install kubectl
          block:
            - name: Overwrite kubernetes.repo
              become: true
              ansible.builtin.copy:
                content: |
                  [kubernetes]
                  name=Kubernetes
                  baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
                  enabled=1
                  gpgcheck=1
                  gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
                dest: /etc/yum.repos.d/kubernetes.repo
                mode: "0755"
            - name: Install kubectl
              become: true
              ansible.builtin.yum:
                name: kubectl
                state: present
        - name: Create DOCKER_HOST var
          ansible.builtin.shell: export DOCKER_HOST=unix://${XDG_RUNTIME_DIR}/docker.sock
        - name: Create k8s cluster
          ansible.builtin.command:
            cmd: kind create cluster
        - name: Install make
          become: true
          ansible.builtin.yum:
            name: make
            state: present
        - name: Get namespaces
          ansible.builtin.shell: kubectl get namespaces
          register: namespaces_list
        - name: Get services
          ansible.builtin.shell: kubectl get services
          register: services_list
        - name: Get serviceaccounts
          ansible.builtin.shell: kubectl get serviceAccounts
          register: serviceaccounts_list
        - name: Run TestWorkSubmitWithTLSClient test
          ansible.builtin.command:
            # cmd: go test -run TestWorkSubmitWithTLSClient /home/msandova/receptor/tests/functional/mesh -v -count 1
            cmd: make test
            chdir: /home/{{ ansible_user }}/receptor
          register: test_work_submit_with_tls_client_output
        - name: Assert test passed
          ansible.builtin.assert:
            that:
              - "'FAIL' not in test_work_submit_with_tls_client_output.stdout"
      always:
        - block:
          - name: Create log file
            ansible.builtin.file:
              path: /tmp/test_work_submit_with_tls_client_output-stdout
              state: touch
            delegate_to: localhost
          - name: Log test output to file
            ansible.builtin.copy:
              dest: /tmp/test_work_submit_with_tls_client_output-stdout
              content: "{{ services_list.stdout }}\n\n{{ serviceaccounts_list.stdout }}\n\n{{ namespaces_list.stdout }}\n\n{{ test_work_submit_with_tls_client_output.stdout }}"
              mode: "0755"
            delegate_to: localhost
          when: test_work_submit_with_tls_client_output is defined
        - name: Delete k8s cluster
          ansible.builtin.command:
            cmd: kind delete cluster
        - name: Uninstall Kind
          become: true
          ansible.builtin.file:
            state: absent
            path: /usr/local/bin/kind
        - name: Uninstall kubectl
          become: true
          ansible.builtin.yum:
            name: kubectl
            state: absent
        - name: Make clean
          community.general.make:
            chdir: /home/{{ ansible_user }}/receptor
            target: clean
